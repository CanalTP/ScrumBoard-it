service: scrumboardit-server

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10
  # region: eu-central-1
  # stage: prod
  environment:
    SERVICE_NAME: ${self:service}
    GITHUB_CLIENT_SECRET: ${self:custom.secrets.GITHUB_CLIENT_SECRET}

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  getBoards:
    handler: boards.all
    timeout: 15
    events:
      - http:
          path: boards
          method: get
          cors: true
  getBoardById:
    handler: boards.id
    events:
      - http:
          path: boards/{boardId}
          method: get
          cors: true
          request:
            parameters:
              paths:
                boardId: true
  getTasksByBoardId:
    handler: boards.tasks
    events:
      - http:
          path: boards/{boardId}/tasks
          method: get
          cors: true
          request:
            parameters:
              paths:
                boardId: true
  getOauthToken:
    handler: oauth.token
    events:
      - http:
          path: oauth/{provider}/token
          method: get
          cors: true
          request:
            parameters:
              paths:
                provider: true
              querystrings:
                code: true
  getOauthConfig:
    handler: oauth.config
    events:
      - http:
          path: oauth/{provider}/config
          method: get
          cors: true
          request:
            parameters:
              paths:
                provider: true

plugins:
  - serverless-plugin-optimize
  - serverless-domain-manager
  - serverless-secrets-plugin

package:
  individually: true

custom:
  optimize:
    presets: ['flow']
  customDomain:
    domainName: api.scrumboard-it.org
    certificateName: '*.scrumboard-it.org'
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true
  secrets: ${file(secrets.${opt:stage, self:provider.stage}.yml)}
